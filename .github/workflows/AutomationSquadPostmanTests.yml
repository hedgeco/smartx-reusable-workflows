# Reusable workflow template for Automated Postman test runs.
name: Postman_Tests_Template
on:
  workflow_call:
    inputs:
      squad:    # e.g. "users-and-tools"
        required: true
        type: string
      suite:    # e.g. "usersAndToolsSmoke"
        required: true
        type: string
      environment:   # e.g. "production"
        required: true
        type: string
      folders:
        required: true
        type: string
    secrets:
      PAPIKEY:
        required: true
      PENVKEY:
        required: true
      COLLID_TO_RUN:
        required: true
      USER_TOKEN:
        required: true
      SLACK_WEBHOOK:
        required: true
      JIRA_ACCT_ID:
        required: true
      ZEPHYR_ACCESS:
        required: true
      ZEPHYR_SECRET:
        required: true
      DEPLOYMENT_USER_QAU_KEY:
        required: true
      DEPLOYMENT_USER_QAU_SECRET:
        required: true

env:
  PROOT: "https://api.getpostman.com/"
  JIRA_ACCT_ID: ${{secrets.JIRA_ACCT_ID}}
  ZEPHYR_ACCESS: ${{secrets.ZEPHYR_ACCESS}}
  ZEPHYR_SECRET: ${{secrets.ZEPHYR_SECRET}}
  NOPTIONS: "-r zephyr --reporter-zephyr-name Automated_API_test_run -x"
  NOTIFY: ""                  # for slack notifications on error, empty on success
  ZCROOT: "https://smartx.atlassian.net/projects/TEST?selectedItem=com.thed.zephyr.je__cycle-summary&testsTab=test-cycles-tab"

jobs:
    postman-tests-and-slack-updates:
        runs-on: self-hosted
        steps:
        - name: Set AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.DEPLOYMENT_USER_QAU_KEY }}
            aws-secret-access-key: ${{ secrets.DEPLOYMENT_USER_QAU_SECRET }}
            aws-region: us-east-1
        - name: Get working dir
          run: pwd
        - name: Create test_results dir
          run: mkdir -p test_results
        - name: Get current date for folder name
          id: folder
          run: echo "::set-output name=folder::$(date +'smartx-testing/%Y-%m-%d')"
        - name: Run tests
          run: newman run ${{env.PROOT}}collections/${{secrets.COLLID_TO_RUN}}?apikey=${{secrets.PAPIKEY}} -e ${{env.PROOT}}environments/${{secrets.PENVKEY}}?apikey=${{secrets.PAPIKEY}} ${{env.NOPTIONS}} ${{inputs.folders}}
          id: ptests
        - name: Move response time files on linux system - prep for upload to S3
          if: always()
          run: mv *.csv ./test_results
        - name: Move response time files
          if: always()
          run: aws s3 mv test_results s3://smx-qa-postman-queries/${{ steps.folder.outputs.folder }} --recursive
        - name: Check for failure and update slack notification message
          if: failure()
          run: echo "NOTIFY=@here" >> $GITHUB_ENV
        - name: Update Slack
          if: always()
          uses: rtCamp/action-slack-notify@v2
          env:
            SLACK_CHANNEL: test-results-${{inputs.squad}}-${{inputs.environment}}
            SLACK_USERNAME: GithubActions
            SLACK_ICON: https://github.com/rtCamp.png?size=48
            SLACK_COLOR: ${{ job.status }}
            SLACK_MESSAGE: '${{env.NOTIFY}} ${{inputs.suite}} Tests ${{ job.status }} with ${{steps.ptests.outputs.NUM_FAILS}} errors. ${{steps.ptests.outputs.NUM_TESTS}} tests run. ${{steps.ptests.outputs.CYCLE_NAME}} ${{env.ZCROOT}}&version.id=${{steps.ptests.outputs.CYCLE_VERSION}}&cycle.id=${{steps.ptests.outputs.CYCLE_ID}}&versionReleased=false'
            SLACK_TITLE: ${{github.repository}}
            SLACK_WEBHOOK: ${{secrets.SLACK_WEBHOOK}}
            SLACK_LINK_NAMES : true
